{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal';\nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO, isBefore, startOfDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date\n    const today = new Date();\n    // Get the start of the current week (Monday)\n    const monday = startOfWeek(today, {\n      weekStartsOn: 1\n    });\n    // Format as YYYY-MM-DD\n    return format(monday, 'yyyy-MM-dd');\n  });\n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) => acts.map(act => ({\n        ...act,\n        semana: currentWeek,\n        dia: day,\n        id: `${currentWeek}-${day}-${act.actividad}`\n      })));\n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  // Ensure only one handleToggleActivity function is defined\n  const handleToggleActivity = id => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act => act.id === id ? {\n        ...act,\n        completado: !act.completado\n      } : act)\n    }));\n  };\n  const navigateWeek = direction => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n\n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round(completedCount / totalCount * 100) : 0;\n  const getProgressBarEmoji = percentage => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n\n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n\n  // Function to get day number from day name and current week\n  const getDayNumber = dayName => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n\n  // Get today's date\n  const today = startOfDay(new Date());\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n\n  // Function to check if a day is today\n  const isCurrentDay = dayName => {\n    // Get the date for the current week's Monday\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n\n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    return dayFormatted === todayFormatted;\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n  const [completions, setCompletions] = useState({});\n\n  // Recalculate per-day completion counts whenever weeksData changes\n  useEffect(() => {\n    const newCompletions = {};\n    Object.entries(weeksData).forEach(([weekMonday, activities]) => {\n      if (!Array.isArray(activities)) return;\n      const weekStart = parseISO(weekMonday);\n      activities.forEach(act => {\n        const dayIdx = days.indexOf(act.dia);\n        if (dayIdx === -1) return;\n        const dateObj = addDays(weekStart, dayIdx);\n        const dateStr = format(dateObj, 'yyyy-MM-dd');\n        if (!newCompletions[dateStr]) {\n          newCompletions[dateStr] = {\n            completed: 0,\n            total: 0\n          };\n        }\n        newCompletions[dateStr].total += 1;\n        if (act.completado) {\n          newCompletions[dateStr].completed += 1;\n        }\n      });\n    });\n    setCompletions(newCompletions);\n  }, [weeksData]);\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({\n      ...prevNotes,\n      [dayKey]: newNotes\n    }));\n  };\n  const handleCheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: true\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleUncheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: false\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleDayClick = day => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  // New state for calendar modal\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = {\n        ...prev\n      };\n      if (!newCompletions[dateStr]) newCompletions[dateStr] = {};\n      newCompletions[dateStr][activityId] = completed;\n      return newCompletions;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Agenda de Estudio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(WeekNavigation, {\n        onPrev: () => navigateWeek('prev'),\n        onNext: () => navigateWeek('next'),\n        currentWeek: currentWeek,\n        onOpenCalendar: handleOpenCalendar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"calendar-button\",\n          onClick: handleOpenCalendar,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M3 5H1V3H3V5ZM3 7H1V5H3V7ZM3 9H1V7H3V9ZM3 11H1V9H3V11ZM3 13H1V11H3V13ZM3 15H1V13H3V15ZM3 17H1V15H3V17ZM3 19H1V17H3V19ZM3 21H1V19H3V21ZM5 5H3V3H5V5ZM5 7H3V5H5V7ZM5 9H3V7H5V9ZM5 11H3V9H5V11ZM5 13H3V11H5V13ZM5 15H3V13H5V15ZM5 17H3V15H5V17ZM5 19H3V17H5V19ZM5 21H3V19H5V21ZM7 5H5V3H7V5ZM7 7H5V5H7V7ZM7 9H5V7H7V9ZM7 11H5V9H7V11ZM7 13H5V11H7V13ZM7 15H5V13H7V15ZM7 17H5V15H7V17ZM7 19H5V17H7V19ZM7 21H5V19H7V21ZM9 5H7V3H9V5ZM9 7H7V5H9V7ZM9 9H7V7H9V9ZM9 11H7V9H9V11ZM9 13H7V11H9V13ZM9 15H7V13H9V15ZM9 17H7V15H9V17ZM9 19H7V17H9V19ZM9 21H7V19H9V21ZM11 5H9V3H11V5ZM11 7H9V5H11V7ZM11 9H9V7H11V9ZM11 11H9V9H11V11ZM11 13H9V11H11V13ZM11 15H9V13H11V15ZM11 17H9V15H11V17ZM11 19H9V17H11V19ZM11 21H9V19H11V21ZM13 5H11V3H13V5ZM13 7H11V5H13V7ZM13 9H11V7H13V9ZM13 11H11V9H13V11ZM13 13H11V11H13V13ZM13 15H11V13H13V15ZM13 17H11V15H13V17ZM13 19H11V17H13V19ZM13 21H11V19H13V21ZM15 5H13V3H15V5ZM15 7H13V5H15V7ZM15 9H13V7H15V9ZM15 11H13V9H15V11ZM15 13H13V11H15V13ZM15 15H13V13H15V15ZM15 17H13V15H15V17ZM15 19H13V17H15V19ZM15 21H13V19H15V21ZM17 5H15V3H17V5ZM17 7H15V5H17V7ZM17 9H15V7H17V9ZM17 11H15V9H17V11ZM17 13H15V11H17V13ZM17 15H15V13H17V15ZM17 17H15V15H17V17ZM17 19H15V17H17V19ZM17 21H15V19H17V21ZM19 5H17V3H19V5ZM19 7H17V5H19V7ZM19 9H17V7H19V9ZM19 11H17V9H19V11ZM19 13H17V11H19V13ZM19 15H17V13H19V15ZM19 17H17V15H19V17ZM19 19H17V17H19V19ZM19 21H17V19H19V21ZM21 5H19V3H21V5ZM21 7H19V5H21V7ZM21 9H19V7H21V9ZM21 11H19V9H21V11ZM21 13H19V11H21V13ZM21 15H19V13H21V15ZM21 17H19V15H21V17ZM21 19H19V17H21V19ZM21 21H19V19H21V21Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"frequency-button\",\n          onClick: () => {},\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M2 20H22V22H2V20ZM4 12H8V18H4V12ZM10 8H14V18H10V8ZM16 4H20V18H16V4Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progressText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: days.map((day, index) => {\n        const dayDate = addDays(parseISO(currentWeek), index);\n        const isPast = isBefore(startOfDay(dayDate), today);\n        return activitiesByDay[day] && /*#__PURE__*/_jsxDEV(DayView, {\n          day: day,\n          dayNumber: getDayNumber(day),\n          activities: activitiesByDay[day],\n          onToggle: handleToggleActivity,\n          onDayClick: () => handleDayClick(day),\n          isToday: isCurrentDay(day),\n          isPast: isPast\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), isModalOpen && selectedDay && /*#__PURE__*/_jsxDEV(DayDetailModal, {\n      day: selectedDay // Pass selected day\n      ,\n      activities: activitiesByDay[selectedDay] || [],\n      notes: notes[selectedDay] || '',\n      onToggleActivity: handleToggleActivity,\n      onSaveNotes: handleSaveNotes,\n      onClose: handleCloseModal,\n      onCheckAll: handleCheckAll,\n      onUncheckAll: handleUncheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {\n      isOpen: isCalendarModalOpen,\n      onClose: handleCloseCalendar,\n      completions: completions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jMpB4YHsmbUbH97S7qJRfJ43RxE=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","WeekNavigation","DayView","DayDetailModal","defaultActivities","ProgressBar","format","startOfWeek","addDays","parseISO","isBefore","startOfDay","es","CalendarModal","jsxDEV","_jsxDEV","App","_s","currentWeek","setCurrentWeek","today","Date","monday","weekStartsOn","weeksData","setWeeksData","Array","isArray","console","log","newWeekActivities","Object","entries","flatMap","day","acts","map","act","semana","dia","id","actividad","prev","currentWeekData","handleToggleActivity","completado","navigateWeek","direction","currentMonday","newMonday","completedCount","filter","a","length","totalCount","progress","Math","round","getProgressBarEmoji","percentage","progressText","activitiesByDay","reduce","acc","activity","push","days","getDayNumber","dayName","dayIndex","indexOf","weekStart","dayDate","todayFormatted","todayDayName","getDay","isCurrentDay","dayFormatted","isModalOpen","setIsModalOpen","selectedDay","setSelectedDay","notes","setNotes","completions","setCompletions","newCompletions","forEach","weekMonday","activities","dayIdx","dateObj","dateStr","completed","total","handleSaveNotes","dayKey","newNotes","prevNotes","handleCheckAll","prevWeeksData","newWeeksData","handleUncheckAll","handleDayClick","handleCloseModal","isCalendarModalOpen","setIsCalendarModalOpen","handleOpenCalendar","handleCloseCalendar","updateCompletions","date","activityId","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onNext","onOpenCalendar","style","display","gap","onClick","width","height","viewBox","fill","xmlns","d","index","isPast","dayNumber","onToggle","onDayClick","isToday","onToggleActivity","onSaveNotes","onClose","onCheckAll","onUncheckAll","isOpen","_c","$RefreshReg$"],"sources":["/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal'; \nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO, isBefore, startOfDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\n\nexport default function App() {\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date\n    const today = new Date();\n    // Get the start of the current week (Monday)\n    const monday = startOfWeek(today, { weekStartsOn: 1 });\n    // Format as YYYY-MM-DD\n    return format(monday, 'yyyy-MM-dd');\n  });\n  \n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) =>\n        acts.map(act => ({ ...act, semana: currentWeek, dia: day, id: `${currentWeek}-${day}-${act.actividad}` }))\n      );\n      \n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities,\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  // Ensure only one handleToggleActivity function is defined\n  const handleToggleActivity = (id) => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act =>\n        act.id === id ? { ...act, completado: !act.completado } : act\n      ),\n    }));\n  };\n  \n  const navigateWeek = (direction) => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n  \n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  const getProgressBarEmoji = (percentage) => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  \n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  \n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n  \n  // Function to get day number from day name and current week\n  const getDayNumber = (dayName) => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    \n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n  \n  // Get today's date\n  const today = startOfDay(new Date());\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  \n  // Function to check if a day is today\n  const isCurrentDay = (dayName) => {\n    // Get the date for the current week's Monday\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n    \n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    \n    return dayFormatted === todayFormatted;\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n  const [completions, setCompletions] = useState({});\n\n  // Recalculate per-day completion counts whenever weeksData changes\n  useEffect(() => {\n    const newCompletions = {};\n    Object.entries(weeksData).forEach(([weekMonday, activities]) => {\n      if (!Array.isArray(activities)) return;\n      const weekStart = parseISO(weekMonday);\n      activities.forEach(act => {\n        const dayIdx = days.indexOf(act.dia);\n        if (dayIdx === -1) return;\n        const dateObj = addDays(weekStart, dayIdx);\n        const dateStr = format(dateObj, 'yyyy-MM-dd');\n        if (!newCompletions[dateStr]) {\n          newCompletions[dateStr] = { completed: 0, total: 0 };\n        }\n        newCompletions[dateStr].total += 1;\n        if (act.completado) {\n          newCompletions[dateStr].completed += 1;\n        }\n      });\n    });\n    setCompletions(newCompletions);\n  }, [weeksData]);\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({ ...prevNotes, [dayKey]: newNotes }));\n  };\n\n  const handleCheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: true } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleUncheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: false } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  // New state for calendar modal\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = { ...prev };\n      if (!newCompletions[dateStr]) newCompletions[dateStr] = {};\n      newCompletions[dateStr][activityId] = completed;\n      return newCompletions;\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app-title\">Agenda de Estudio</h1>\n      \n      <div className=\"navbar\">\n        <WeekNavigation \n          onPrev={() => navigateWeek('prev')} \n          onNext={() => navigateWeek('next')} \n          currentWeek={currentWeek} \n          onOpenCalendar={handleOpenCalendar}\n        />\n        <div style={{ display: 'flex', gap: '10px' }}>\n          <button className=\"calendar-button\" onClick={handleOpenCalendar}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M3 5H1V3H3V5ZM3 7H1V5H3V7ZM3 9H1V7H3V9ZM3 11H1V9H3V11ZM3 13H1V11H3V13ZM3 15H1V13H3V15ZM3 17H1V15H3V17ZM3 19H1V17H3V19ZM3 21H1V19H3V21ZM5 5H3V3H5V5ZM5 7H3V5H5V7ZM5 9H3V7H5V9ZM5 11H3V9H5V11ZM5 13H3V11H5V13ZM5 15H3V13H5V15ZM5 17H3V15H5V17ZM5 19H3V17H5V19ZM5 21H3V19H5V21ZM7 5H5V3H7V5ZM7 7H5V5H7V7ZM7 9H5V7H7V9ZM7 11H5V9H7V11ZM7 13H5V11H7V13ZM7 15H5V13H7V15ZM7 17H5V15H7V17ZM7 19H5V17H7V19ZM7 21H5V19H7V21ZM9 5H7V3H9V5ZM9 7H7V5H9V7ZM9 9H7V7H9V9ZM9 11H7V9H9V11ZM9 13H7V11H9V13ZM9 15H7V13H9V15ZM9 17H7V15H9V17ZM9 19H7V17H9V19ZM9 21H7V19H9V21ZM11 5H9V3H11V5ZM11 7H9V5H11V7ZM11 9H9V7H11V9ZM11 11H9V9H11V11ZM11 13H9V11H11V13ZM11 15H9V13H11V15ZM11 17H9V15H11V17ZM11 19H9V17H11V19ZM11 21H9V19H11V21ZM13 5H11V3H13V5ZM13 7H11V5H13V7ZM13 9H11V7H13V9ZM13 11H11V9H13V11ZM13 13H11V11H13V13ZM13 15H11V13H13V15ZM13 17H11V15H13V17ZM13 19H11V17H13V19ZM13 21H11V19H13V21ZM15 5H13V3H15V5ZM15 7H13V5H15V7ZM15 9H13V7H15V9ZM15 11H13V9H15V11ZM15 13H13V11H15V13ZM15 15H13V13H15V15ZM15 17H13V15H15V17ZM15 19H13V17H15V19ZM15 21H13V19H15V21ZM17 5H15V3H17V5ZM17 7H15V5H17V7ZM17 9H15V7H17V9ZM17 11H15V9H17V11ZM17 13H15V11H17V13ZM17 15H15V13H17V15ZM17 17H15V15H17V17ZM17 19H15V17H17V19ZM17 21H15V19H17V21ZM19 5H17V3H19V5ZM19 7H17V5H19V7ZM19 9H17V7H19V9ZM19 11H17V9H19V11ZM19 13H17V11H19V13ZM19 15H17V13H19V15ZM19 17H17V15H19V17ZM19 19H17V17H19V19ZM19 21H17V19H19V21ZM21 5H19V3H21V5ZM21 7H19V5H21V7ZM21 9H19V7H21V9ZM21 11H19V9H21V11ZM21 13H19V11H21V13ZM21 15H19V13H21V15ZM21 17H19V15H21V17ZM21 19H19V17H21V19ZM21 21H19V19H21V21Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n          <button className=\"frequency-button\" onClick={() => {}}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M2 20H22V22H2V20ZM4 12H8V18H4V12ZM10 8H14V18H10V8ZM16 4H20V18H16V4Z\" fill=\"currentColor\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"progress-summary\">\n        <p>{progressText}</p>\n        <ProgressBar progress={progress} />\n      </div>\n      \n      <div className=\"week-view\">\n        {days.map((day, index) => {\n          const dayDate = addDays(parseISO(currentWeek), index);\n          const isPast = isBefore(startOfDay(dayDate), today);\n          return (\n            activitiesByDay[day] && (\n              <DayView \n                key={day} \n                day={day} \n                dayNumber={getDayNumber(day)}\n                activities={activitiesByDay[day]} \n                onToggle={handleToggleActivity} \n                onDayClick={() => handleDayClick(day)}\n                isToday={isCurrentDay(day)}\n                isPast={isPast}\n              />\n            )\n          );\n        })}\n      </div>\n\n      {isModalOpen && selectedDay && (\n        <DayDetailModal\n          day={selectedDay} // Pass selected day\n          activities={activitiesByDay[selectedDay] || []}\n          notes={notes[selectedDay] || ''}\n          onToggleActivity={handleToggleActivity}\n          onSaveNotes={handleSaveNotes}\n          onClose={handleCloseModal}\n          onCheckAll={handleCheckAll}\n          onUncheckAll={handleUncheckAll}\n        />\n      )}\n      \n      <CalendarModal \n        isOpen={isCalendarModalOpen} \n        onClose={handleCloseCalendar}\n        completions={completions}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,MAAM,EAAEC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,UAAU;AACvF,SAASC,EAAE,QAAQ,iBAAiB;AACpC,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,MAAM;IACnD;IACA,MAAMsB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB;IACA,MAAMC,MAAM,GAAGf,WAAW,CAACa,KAAK,EAAE;MAAEG,YAAY,EAAE;IAAE,CAAC,CAAC;IACtD;IACA,OAAOjB,MAAM,CAACgB,MAAM,EAAE,YAAY,CAAC;EACrC,CAAC,CAAC;EAEF,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGzB,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;;EAEzE;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACyB,SAAS,CAACN,WAAW,CAAC,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACH,SAAS,CAACN,WAAW,CAAC,CAAC,EAAE;MACrEU,OAAO,CAACC,GAAG,CAAC,sBAAsBX,WAAW,EAAE,CAAC;MAChD,MAAMY,iBAAiB,GAAGC,MAAM,CAACC,OAAO,CAAC5B,iBAAiB,CAAC,CAAC6B,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,IAAI,CAAC,KAC9EA,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QAAE,GAAGA,GAAG;QAAEC,MAAM,EAAEpB,WAAW;QAAEqB,GAAG,EAAEL,GAAG;QAAEM,EAAE,EAAE,GAAGtB,WAAW,IAAIgB,GAAG,IAAIG,GAAG,CAACI,SAAS;MAAG,CAAC,CAAC,CAC3G,CAAC;MAEDhB,YAAY,CAACiB,IAAI,KAAK;QACpB,GAAGA,IAAI;QACP,CAACxB,WAAW,GAAGY;MACjB,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACZ,WAAW,EAAEM,SAAS,EAAEC,YAAY,CAAC,CAAC;;EAE1C;EACA,MAAMkB,eAAe,GAAGjB,KAAK,CAACC,OAAO,CAACH,SAAS,CAACN,WAAW,CAAC,CAAC,GAAGM,SAAS,CAACN,WAAW,CAAC,GAAG,EAAE;;EAE3F;EACAU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,SAAS,CAAC;EACpCI,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,WAAW,CAAC;EACxCU,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,eAAe,CAAC;;EAEhD;EACA,MAAMC,oBAAoB,GAAIJ,EAAE,IAAK;IACnCf,YAAY,CAACiB,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAACxB,WAAW,GAAGwB,IAAI,CAACxB,WAAW,CAAC,CAACkB,GAAG,CAACC,GAAG,IACtCA,GAAG,CAACG,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGH,GAAG;QAAEQ,UAAU,EAAE,CAACR,GAAG,CAACQ;MAAW,CAAC,GAAGR,GAC5D;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMS,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,aAAa,GAAGvC,QAAQ,CAACS,WAAW,CAAC;IAC3C,MAAM+B,SAAS,GAAGzC,OAAO,CAACwC,aAAa,EAAED,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE5B,cAAc,CAACb,MAAM,CAAC2C,SAAS,EAAE,YAAY,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGP,eAAe,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACP,UAAU,CAAC,CAACQ,MAAM;EACvE,MAAMC,UAAU,GAAGX,eAAe,CAACU,MAAM;EACzC,MAAME,QAAQ,GAAGD,UAAU,GAAG,CAAC,GAAGE,IAAI,CAACC,KAAK,CAAEP,cAAc,GAAGI,UAAU,GAAI,GAAG,CAAC,GAAG,CAAC;EAErF,MAAMI,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,IAAIA,UAAU,KAAK,GAAG,EAAE,OAAO,IAAI;IACnC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI;IACjC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,IAAI;IACjC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,GAAG;IAChC,OAAO,IAAI;EACb,CAAC;EAED,MAAMC,YAAY,GAAG,aAAaV,cAAc,IAAII,UAAU,gBAAgBI,mBAAmB,CAACH,QAAQ,CAAC,EAAE;;EAE7G;EACA,MAAMM,eAAe,GAAGlB,eAAe,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IAChE,IAAI,CAACD,GAAG,CAACC,QAAQ,CAACzB,GAAG,CAAC,EAAEwB,GAAG,CAACC,QAAQ,CAACzB,GAAG,CAAC,GAAG,EAAE;IAC9CwB,GAAG,CAACC,QAAQ,CAACzB,GAAG,CAAC,CAAC0B,IAAI,CAACD,QAAQ,CAAC;IAChC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMG,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;;EAEvF;EACA,MAAMC,YAAY,GAAIC,OAAO,IAAK;IAChC,MAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAO,CAACF,OAAO,CAAC;IACtC,IAAIC,QAAQ,KAAK,CAAC,CAAC,EAAE,OAAO,EAAE;IAE9B,MAAME,SAAS,GAAG9D,QAAQ,CAACS,WAAW,CAAC;IACvC,MAAMsD,OAAO,GAAGhE,OAAO,CAAC+D,SAAS,EAAEF,QAAQ,CAAC;IAC5C,OAAO/D,MAAM,CAACkE,OAAO,EAAE,GAAG,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMpD,KAAK,GAAGT,UAAU,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;EACpC,MAAMoD,cAAc,GAAGnE,MAAM,CAACc,KAAK,EAAE,YAAY,CAAC;EAClD,MAAMsD,YAAY,GAAGR,IAAI,CAAC9C,KAAK,CAACuD,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGvD,KAAK,CAACuD,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE1E;EACA,MAAMC,YAAY,GAAIR,OAAO,IAAK;IAChC;IACA,MAAMG,SAAS,GAAG9D,QAAQ,CAACS,WAAW,CAAC;IACvC,MAAMmD,QAAQ,GAAGH,IAAI,CAACI,OAAO,CAACF,OAAO,CAAC;IACtC,MAAMI,OAAO,GAAGhE,OAAO,CAAC+D,SAAS,EAAEF,QAAQ,CAAC;;IAE5C;IACA,MAAMQ,YAAY,GAAGvE,MAAM,CAACkE,OAAO,EAAE,YAAY,CAAC;IAElD,OAAOK,YAAY,KAAKJ,cAAc;EACxC,CAAC;EAED,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkF,WAAW,EAAEC,cAAc,CAAC,GAAGnF,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoF,KAAK,EAAEC,QAAQ,CAAC,GAAGrF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACsF,WAAW,EAAEC,cAAc,CAAC,GAAGvF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuF,cAAc,GAAG,CAAC,CAAC;IACzBvD,MAAM,CAACC,OAAO,CAACR,SAAS,CAAC,CAAC+D,OAAO,CAAC,CAAC,CAACC,UAAU,EAAEC,UAAU,CAAC,KAAK;MAC9D,IAAI,CAAC/D,KAAK,CAACC,OAAO,CAAC8D,UAAU,CAAC,EAAE;MAChC,MAAMlB,SAAS,GAAG9D,QAAQ,CAAC+E,UAAU,CAAC;MACtCC,UAAU,CAACF,OAAO,CAAClD,GAAG,IAAI;QACxB,MAAMqD,MAAM,GAAGxB,IAAI,CAACI,OAAO,CAACjC,GAAG,CAACE,GAAG,CAAC;QACpC,IAAImD,MAAM,KAAK,CAAC,CAAC,EAAE;QACnB,MAAMC,OAAO,GAAGnF,OAAO,CAAC+D,SAAS,EAAEmB,MAAM,CAAC;QAC1C,MAAME,OAAO,GAAGtF,MAAM,CAACqF,OAAO,EAAE,YAAY,CAAC;QAC7C,IAAI,CAACL,cAAc,CAACM,OAAO,CAAC,EAAE;UAC5BN,cAAc,CAACM,OAAO,CAAC,GAAG;YAAEC,SAAS,EAAE,CAAC;YAAEC,KAAK,EAAE;UAAE,CAAC;QACtD;QACAR,cAAc,CAACM,OAAO,CAAC,CAACE,KAAK,IAAI,CAAC;QAClC,IAAIzD,GAAG,CAACQ,UAAU,EAAE;UAClByC,cAAc,CAACM,OAAO,CAAC,CAACC,SAAS,IAAI,CAAC;QACxC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFR,cAAc,CAACC,cAAc,CAAC;EAChC,CAAC,EAAE,CAAC9D,SAAS,CAAC,CAAC;EAEf,MAAMuE,eAAe,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IAC5Cd,QAAQ,CAACe,SAAS,KAAK;MAAE,GAAGA,SAAS;MAAE,CAACF,MAAM,GAAGC;IAAS,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAME,cAAc,GAAIH,MAAM,IAAK;IACjCvE,YAAY,CAAC2E,aAAa,IAAI;MAC5B,MAAMC,YAAY,GAAG;QAAE,GAAGD;MAAc,CAAC;MACzCC,YAAY,CAACnF,WAAW,CAAC,GAAGmF,YAAY,CAACnF,WAAW,CAAC,CAACkB,GAAG,CAAC4B,QAAQ,IAChEA,QAAQ,CAACzB,GAAG,KAAKyD,MAAM,GAAG;QAAE,GAAGhC,QAAQ;QAAEnB,UAAU,EAAE;MAAK,CAAC,GAAGmB,QAChE,CAAC;MACD,OAAOqC,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIN,MAAM,IAAK;IACnCvE,YAAY,CAAC2E,aAAa,IAAI;MAC5B,MAAMC,YAAY,GAAG;QAAE,GAAGD;MAAc,CAAC;MACzCC,YAAY,CAACnF,WAAW,CAAC,GAAGmF,YAAY,CAACnF,WAAW,CAAC,CAACkB,GAAG,CAAC4B,QAAQ,IAChEA,QAAQ,CAACzB,GAAG,KAAKyD,MAAM,GAAG;QAAE,GAAGhC,QAAQ;QAAEnB,UAAU,EAAE;MAAM,CAAC,GAAGmB,QACjE,CAAC;MACD,OAAOqC,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,cAAc,GAAIrE,GAAG,IAAK;IAC9B+C,cAAc,CAAC/C,GAAG,CAAC;IACnB6C,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMyB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzB,cAAc,CAAC,KAAK,CAAC;IACrBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAM,CAACwB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5G,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAM6G,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCF,sBAAsB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,UAAU,EAAElB,SAAS,KAAK;IACzDR,cAAc,CAAC3C,IAAI,IAAI;MACrB,MAAMkD,OAAO,GAAGkB,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChD,MAAM3B,cAAc,GAAG;QAAE,GAAG5C;MAAK,CAAC;MAClC,IAAI,CAAC4C,cAAc,CAACM,OAAO,CAAC,EAAEN,cAAc,CAACM,OAAO,CAAC,GAAG,CAAC,CAAC;MAC1DN,cAAc,CAACM,OAAO,CAAC,CAACmB,UAAU,CAAC,GAAGlB,SAAS;MAC/C,OAAOP,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvE,OAAA;IAAKmG,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpG,OAAA;MAAImG,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhDxG,OAAA;MAAKmG,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBpG,OAAA,CAACd,cAAc;QACbuH,MAAM,EAAEA,CAAA,KAAM1E,YAAY,CAAC,MAAM,CAAE;QACnC2E,MAAM,EAAEA,CAAA,KAAM3E,YAAY,CAAC,MAAM,CAAE;QACnC5B,WAAW,EAAEA,WAAY;QACzBwG,cAAc,EAAEf;MAAmB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFxG,OAAA;QAAK4G,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAV,QAAA,gBAC3CpG,OAAA;UAAQmG,SAAS,EAAC,iBAAiB;UAACY,OAAO,EAAEnB,kBAAmB;UAAAQ,QAAA,eAC9DpG,OAAA;YAAKgH,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC,4BAA4B;YAAAhB,QAAA,eAC5FpG,OAAA;cAAMqH,CAAC,EAAC,u9CAAu9C;cAACF,IAAI,EAAC;YAAc;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACl/C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACTxG,OAAA;UAAQmG,SAAS,EAAC,kBAAkB;UAACY,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;UAAAX,QAAA,eACrDpG,OAAA;YAAKgH,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC,4BAA4B;YAAAhB,QAAA,eAC5FpG,OAAA;cAAMqH,CAAC,EAAC,qEAAqE;cAACF,IAAI,EAAC;YAAc;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxG,OAAA;MAAKmG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BpG,OAAA;QAAAoG,QAAA,EAAIvD;MAAY;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBxG,OAAA,CAACV,WAAW;QAACkD,QAAQ,EAAEA;MAAS;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eAENxG,OAAA;MAAKmG,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBjD,IAAI,CAAC9B,GAAG,CAAC,CAACF,GAAG,EAAEmG,KAAK,KAAK;QACxB,MAAM7D,OAAO,GAAGhE,OAAO,CAACC,QAAQ,CAACS,WAAW,CAAC,EAAEmH,KAAK,CAAC;QACrD,MAAMC,MAAM,GAAG5H,QAAQ,CAACC,UAAU,CAAC6D,OAAO,CAAC,EAAEpD,KAAK,CAAC;QACnD,OACEyC,eAAe,CAAC3B,GAAG,CAAC,iBAClBnB,OAAA,CAACb,OAAO;UAENgC,GAAG,EAAEA,GAAI;UACTqG,SAAS,EAAEpE,YAAY,CAACjC,GAAG,CAAE;UAC7BuD,UAAU,EAAE5B,eAAe,CAAC3B,GAAG,CAAE;UACjCsG,QAAQ,EAAE5F,oBAAqB;UAC/B6F,UAAU,EAAEA,CAAA,KAAMlC,cAAc,CAACrE,GAAG,CAAE;UACtCwG,OAAO,EAAE9D,YAAY,CAAC1C,GAAG,CAAE;UAC3BoG,MAAM,EAAEA;QAAO,GAPVpG,GAAG;UAAAkF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQT,CACF;MAEL,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELzC,WAAW,IAAIE,WAAW,iBACzBjE,OAAA,CAACZ,cAAc;MACb+B,GAAG,EAAE8C,WAAY,CAAC;MAAA;MAClBS,UAAU,EAAE5B,eAAe,CAACmB,WAAW,CAAC,IAAI,EAAG;MAC/CE,KAAK,EAAEA,KAAK,CAACF,WAAW,CAAC,IAAI,EAAG;MAChC2D,gBAAgB,EAAE/F,oBAAqB;MACvCgG,WAAW,EAAE7C,eAAgB;MAC7B8C,OAAO,EAAErC,gBAAiB;MAC1BsC,UAAU,EAAE3C,cAAe;MAC3B4C,YAAY,EAAEzC;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF,eAEDxG,OAAA,CAACF,aAAa;MACZmI,MAAM,EAAEvC,mBAAoB;MAC5BoC,OAAO,EAAEjC,mBAAoB;MAC7BxB,WAAW,EAAEA;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACtG,EAAA,CAjQuBD,GAAG;EAAA,QAUShB,eAAe;AAAA;AAAAiJ,EAAA,GAV3BjI,GAAG;AAAA,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}