{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal';\nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    const today = new Date();\n    // Create a copy of the date to avoid modifying the original\n    const d = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()));\n    // Set to the previous Monday (or stay on Monday if today is Monday)\n    // getDay() returns 0 for Sunday, 1 for Monday, etc.\n    const day = d.getUTCDay();\n    // Calculate the difference to get to Monday\n    // If it's Sunday (0), we want to go back 6 days to get to Monday\n    // Otherwise, we go back (day - 1) days to get to Monday\n    const diff = day === 0 ? -6 : 1 - day;\n    d.setUTCDate(d.getUTCDate() + diff);\n\n    // Format the date as YYYY-MM-DD in local time\n    const year = d.getUTCFullYear();\n    const month = String(d.getUTCMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(d.getUTCDate()).padStart(2, '0');\n    return `${year}-${month}-${dayOfMonth}`;\n  });\n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) => acts.map(act => ({\n        ...act,\n        semana: currentWeek,\n        dia: day,\n        id: `${currentWeek}-${day}-${act.actividad}`\n      })));\n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n  const handleToggleActivity = id => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act => act.id === id ? {\n        ...act,\n        completado: !act.completado\n      } : act)\n    }));\n  };\n  const navigateWeek = direction => {\n    const date = new Date(currentWeek);\n    date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n\n    // Format the date as YYYY-MM-DD in local time\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(date.getDate()).padStart(2, '0');\n    setCurrentWeek(`${year}-${month}-${dayOfMonth}`);\n  };\n\n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round(completedCount / totalCount * 100) : 0;\n  const getProgressBarEmoji = percentage => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n\n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n\n  // Get today's date in local time\n  const today = new Date();\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n\n  // Function to check if a day is today\n  const isCurrentDay = dayName => {\n    // Get the date for the current week's Monday\n    const weekStart = new Date(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = new Date(weekStart);\n    dayDate.setDate(weekStart.getDate() + dayIndex);\n\n    // Format the day's date as YYYY-MM-DD in local time\n    const dayFormatted = `${dayDate.getFullYear()}-${String(dayDate.getMonth() + 1).padStart(2, '0')}-${String(dayDate.getDate()).padStart(2, '0')}`;\n    return dayFormatted === todayFormatted;\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({\n      ...prevNotes,\n      [dayKey]: newNotes\n    }));\n  };\n  const handleCheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: true\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleUncheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: false\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleDayClick = day => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Agenda de Estudio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekNavigation, {\n      onPrev: () => navigateWeek('prev'),\n      onNext: () => navigateWeek('next'),\n      currentWeek: currentWeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progressText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: days.map(day => activitiesByDay[day] && /*#__PURE__*/_jsxDEV(DayView, {\n        day: day,\n        activities: activitiesByDay[day],\n        onToggle: handleToggleActivity,\n        onDayClick: () => handleDayClick(day),\n        isToday: isCurrentDay(day)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), isModalOpen && selectedDay && /*#__PURE__*/_jsxDEV(DayDetailModal, {\n      day: selectedDay // Pass selected day\n      ,\n      activities: activitiesByDay[selectedDay] || [],\n      notes: notes[selectedDay] || '',\n      onToggleActivity: handleToggleActivity,\n      onSaveNotes: handleSaveNotes,\n      onClose: handleCloseModal,\n      onCheckAll: handleCheckAll,\n      onUncheckAll: handleUncheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mEB2mWRjY9hBa7sSnkPRHsPTp+I=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","WeekNavigation","DayView","DayDetailModal","defaultActivities","ProgressBar","jsxDEV","_jsxDEV","App","_s","currentWeek","setCurrentWeek","today","Date","d","UTC","getFullYear","getMonth","getDate","day","getUTCDay","diff","setUTCDate","getUTCDate","year","getUTCFullYear","month","String","getUTCMonth","padStart","dayOfMonth","weeksData","setWeeksData","Array","isArray","console","log","newWeekActivities","Object","entries","flatMap","acts","map","act","semana","dia","id","actividad","prev","currentWeekData","handleToggleActivity","completado","navigateWeek","direction","date","setDate","completedCount","filter","a","length","totalCount","progress","Math","round","getProgressBarEmoji","percentage","progressText","activitiesByDay","reduce","acc","activity","push","days","todayDayName","getDay","todayFormatted","isCurrentDay","dayName","weekStart","dayIndex","indexOf","dayDate","dayFormatted","isModalOpen","setIsModalOpen","selectedDay","setSelectedDay","notes","setNotes","handleSaveNotes","dayKey","newNotes","prevNotes","handleCheckAll","prevWeeksData","newWeeksData","handleUncheckAll","handleDayClick","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onNext","activities","onToggle","onDayClick","isToday","onToggleActivity","onSaveNotes","onClose","onCheckAll","onUncheckAll","_c","$RefreshReg$"],"sources":["/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal'; \nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\n\nexport default function App() {\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    const today = new Date();\n    // Create a copy of the date to avoid modifying the original\n    const d = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()));\n    // Set to the previous Monday (or stay on Monday if today is Monday)\n    // getDay() returns 0 for Sunday, 1 for Monday, etc.\n    const day = d.getUTCDay();\n    // Calculate the difference to get to Monday\n    // If it's Sunday (0), we want to go back 6 days to get to Monday\n    // Otherwise, we go back (day - 1) days to get to Monday\n    const diff = day === 0 ? -6 : 1 - day;\n    d.setUTCDate(d.getUTCDate() + diff);\n    \n    // Format the date as YYYY-MM-DD in local time\n    const year = d.getUTCFullYear();\n    const month = String(d.getUTCMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(d.getUTCDate()).padStart(2, '0');\n    \n    return `${year}-${month}-${dayOfMonth}`;\n  });\n  \n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) =>\n        acts.map(act => ({ ...act, semana: currentWeek, dia: day, id: `${currentWeek}-${day}-${act.actividad}` }))\n      );\n      \n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities,\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  const handleToggleActivity = (id) => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act =>\n        act.id === id ? { ...act, completado: !act.completado } : act\n      ),\n    }));\n  };\n  \n  const navigateWeek = (direction) => {\n    const date = new Date(currentWeek);\n    date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n    \n    // Format the date as YYYY-MM-DD in local time\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(date.getDate()).padStart(2, '0');\n    \n    setCurrentWeek(`${year}-${month}-${dayOfMonth}`);\n  };\n  \n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  const getProgressBarEmoji = (percentage) => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  \n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  \n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n  \n  // Get today's date in local time\n  const today = new Date();\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n  \n  // Function to check if a day is today\n  const isCurrentDay = (dayName) => {\n    // Get the date for the current week's Monday\n    const weekStart = new Date(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = new Date(weekStart);\n    dayDate.setDate(weekStart.getDate() + dayIndex);\n    \n    // Format the day's date as YYYY-MM-DD in local time\n    const dayFormatted = `${dayDate.getFullYear()}-${String(dayDate.getMonth() + 1).padStart(2, '0')}-${String(dayDate.getDate()).padStart(2, '0')}`;\n    \n    return dayFormatted === todayFormatted;\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({ ...prevNotes, [dayKey]: newNotes }));\n  };\n\n  const handleCheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: true } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleUncheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: false } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app-title\">Agenda de Estudio</h1>\n      \n      <WeekNavigation \n        onPrev={() => navigateWeek('prev')} \n        onNext={() => navigateWeek('next')} \n        currentWeek={currentWeek} \n      />\n      \n      <div className=\"progress-summary\">\n        <p>{progressText}</p>\n        <ProgressBar progress={progress} />\n      </div>\n      \n      <div className=\"week-view\">\n        {days.map(day => (\n          activitiesByDay[day] && (\n            <DayView \n              key={day} \n              day={day} \n              activities={activitiesByDay[day]} \n              onToggle={handleToggleActivity} \n              onDayClick={() => handleDayClick(day)}\n              isToday={isCurrentDay(day)}\n            />\n          )\n        ))}\n      </div>\n\n      {isModalOpen && selectedDay && (\n        <DayDetailModal\n          day={selectedDay} // Pass selected day\n          activities={activitiesByDay[selectedDay] || []}\n          notes={notes[selectedDay] || ''}\n          onToggleActivity={handleToggleActivity}\n          onSaveNotes={handleSaveNotes}\n          onClose={handleCloseModal}\n          onCheckAll={handleCheckAll}\n          onUncheckAll={handleUncheckAll}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}