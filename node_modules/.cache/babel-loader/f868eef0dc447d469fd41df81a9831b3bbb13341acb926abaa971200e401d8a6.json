{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal';\nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date\n    const today = new Date();\n    // Get the start of the current week (Monday)\n    const monday = startOfWeek(today, {\n      weekStartsOn: 1\n    });\n    // Format as YYYY-MM-DD\n    return format(monday, 'yyyy-MM-dd');\n  });\n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) => acts.map(act => ({\n        ...act,\n        semana: currentWeek,\n        dia: day,\n        id: `${currentWeek}-${day}-${act.actividad}`\n      })));\n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  // Ensure only one handleToggleActivity function is defined\n  const handleToggleActivity = id => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act => act.id === id ? {\n        ...act,\n        completado: !act.completado\n      } : act)\n    }));\n  };\n  const navigateWeek = direction => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n\n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round(completedCount / totalCount * 100) : 0;\n  const getProgressBarEmoji = percentage => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n\n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n\n  // Function to get day number from day name and current week\n  const getDayNumber = dayName => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n\n  // Get today's date\n  const today = new Date();\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n\n  // Function to check if a day is today\n  const isCurrentDay = dayName => {\n    // Get the date for the current week's Monday\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n\n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    return dayFormatted === todayFormatted;\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n  const [completions, setCompletions] = useState({});\n\n  // Recalculate per-day completion counts whenever weeksData changes\n  useEffect(() => {\n    const newCompletions = {};\n    Object.entries(weeksData).forEach(([weekMonday, activities]) => {\n      if (!Array.isArray(activities)) return;\n      const weekStart = parseISO(weekMonday);\n      activities.forEach(act => {\n        const dayIdx = days.indexOf(act.dia);\n        if (dayIdx === -1) return;\n        const dateObj = addDays(weekStart, dayIdx);\n        const dateStr = format(dateObj, 'yyyy-MM-dd');\n        if (!newCompletions[dateStr]) {\n          newCompletions[dateStr] = {\n            completed: 0,\n            total: 0\n          };\n        }\n        newCompletions[dateStr].total += 1;\n        if (act.completado) {\n          newCompletions[dateStr].completed += 1;\n        }\n      });\n    });\n    setCompletions(newCompletions);\n  }, [weeksData]);\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({\n      ...prevNotes,\n      [dayKey]: newNotes\n    }));\n  };\n  const handleCheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: true\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleUncheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: false\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleDayClick = day => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  // New state for calendar modal\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = {\n        ...prev\n      };\n      if (!newCompletions[dateStr]) newCompletions[dateStr] = {};\n      newCompletions[dateStr][activityId] = completed;\n      return newCompletions;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Agenda de Estudio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekNavigation, {\n      onPrev: () => navigateWeek('prev'),\n      onNext: () => navigateWeek('next'),\n      currentWeek: currentWeek,\n      onOpenCalendar: handleOpenCalendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progressText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: days.map(day => activitiesByDay[day] && /*#__PURE__*/_jsxDEV(DayView, {\n        day: day,\n        dayNumber: getDayNumber(day),\n        activities: activitiesByDay[day],\n        onToggle: handleToggleActivity,\n        onDayClick: () => handleDayClick(day),\n        isToday: isCurrentDay(day),\n        today: new Date()\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), isModalOpen && selectedDay && /*#__PURE__*/_jsxDEV(DayDetailModal, {\n      day: selectedDay // Pass selected day\n      ,\n      activities: activitiesByDay[selectedDay] || [],\n      notes: notes[selectedDay] || '',\n      onToggleActivity: handleToggleActivity,\n      onSaveNotes: handleSaveNotes,\n      onClose: handleCloseModal,\n      onCheckAll: handleCheckAll,\n      onUncheckAll: handleUncheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {\n      isOpen: isCalendarModalOpen,\n      onClose: handleCloseCalendar,\n      completions: completions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jMpB4YHsmbUbH97S7qJRfJ43RxE=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","WeekNavigation","DayView","DayDetailModal","defaultActivities","ProgressBar","format","startOfWeek","addDays","parseISO","es","CalendarModal","jsxDEV","_jsxDEV","App","_s","currentWeek","setCurrentWeek","today","Date","monday","weekStartsOn","weeksData","setWeeksData","Array","isArray","console","log","newWeekActivities","Object","entries","flatMap","day","acts","map","act","semana","dia","id","actividad","prev","currentWeekData","handleToggleActivity","completado","navigateWeek","direction","currentMonday","newMonday","completedCount","filter","a","length","totalCount","progress","Math","round","getProgressBarEmoji","percentage","progressText","activitiesByDay","reduce","acc","activity","push","days","getDayNumber","dayName","dayIndex","indexOf","weekStart","dayDate","todayFormatted","todayDayName","getDay","isCurrentDay","dayFormatted","isModalOpen","setIsModalOpen","selectedDay","setSelectedDay","notes","setNotes","completions","setCompletions","newCompletions","forEach","weekMonday","activities","dayIdx","dateObj","dateStr","completed","total","handleSaveNotes","dayKey","newNotes","prevNotes","handleCheckAll","prevWeeksData","newWeeksData","handleUncheckAll","handleDayClick","handleCloseModal","isCalendarModalOpen","setIsCalendarModalOpen","handleOpenCalendar","handleCloseCalendar","updateCompletions","date","activityId","toISOString","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onNext","onOpenCalendar","dayNumber","onToggle","onDayClick","isToday","onToggleActivity","onSaveNotes","onClose","onCheckAll","onUncheckAll","isOpen","_c","$RefreshReg$"],"sources":["/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal'; \nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\n\nexport default function App() {\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date\n    const today = new Date();\n    // Get the start of the current week (Monday)\n    const monday = startOfWeek(today, { weekStartsOn: 1 });\n    // Format as YYYY-MM-DD\n    return format(monday, 'yyyy-MM-dd');\n  });\n  \n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) =>\n        acts.map(act => ({ ...act, semana: currentWeek, dia: day, id: `${currentWeek}-${day}-${act.actividad}` }))\n      );\n      \n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities,\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  // Ensure only one handleToggleActivity function is defined\n  const handleToggleActivity = (id) => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act =>\n        act.id === id ? { ...act, completado: !act.completado } : act\n      ),\n    }));\n  };\n  \n  const navigateWeek = (direction) => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n  \n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  const getProgressBarEmoji = (percentage) => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  \n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  \n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n  \n  // Function to get day number from day name and current week\n  const getDayNumber = (dayName) => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    \n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n  \n  // Get today's date\n  const today = new Date();\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  \n  // Function to check if a day is today\n  const isCurrentDay = (dayName) => {\n    // Get the date for the current week's Monday\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n    \n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    \n    return dayFormatted === todayFormatted;\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n  const [completions, setCompletions] = useState({});\n\n  // Recalculate per-day completion counts whenever weeksData changes\n  useEffect(() => {\n    const newCompletions = {};\n    Object.entries(weeksData).forEach(([weekMonday, activities]) => {\n      if (!Array.isArray(activities)) return;\n      const weekStart = parseISO(weekMonday);\n      activities.forEach(act => {\n        const dayIdx = days.indexOf(act.dia);\n        if (dayIdx === -1) return;\n        const dateObj = addDays(weekStart, dayIdx);\n        const dateStr = format(dateObj, 'yyyy-MM-dd');\n        if (!newCompletions[dateStr]) {\n          newCompletions[dateStr] = { completed: 0, total: 0 };\n        }\n        newCompletions[dateStr].total += 1;\n        if (act.completado) {\n          newCompletions[dateStr].completed += 1;\n        }\n      });\n    });\n    setCompletions(newCompletions);\n  }, [weeksData]);\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({ ...prevNotes, [dayKey]: newNotes }));\n  };\n\n  const handleCheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: true } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleUncheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: false } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  // New state for calendar modal\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = { ...prev };\n      if (!newCompletions[dateStr]) newCompletions[dateStr] = {};\n      newCompletions[dateStr][activityId] = completed;\n      return newCompletions;\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app-title\">Agenda de Estudio</h1>\n      \n      <WeekNavigation \n        onPrev={() => navigateWeek('prev')} \n        onNext={() => navigateWeek('next')} \n        currentWeek={currentWeek} \n        onOpenCalendar={handleOpenCalendar}\n      />\n      \n      <div className=\"progress-summary\">\n        <p>{progressText}</p>\n        <ProgressBar progress={progress} />\n      </div>\n      \n      <div className=\"week-view\">\n        {days.map(day => (\n          activitiesByDay[day] && (\n            <DayView \n              key={day} \n              day={day} \n              dayNumber={getDayNumber(day)}\n              activities={activitiesByDay[day]} \n              onToggle={handleToggleActivity} \n              onDayClick={() => handleDayClick(day)}\n              isToday={isCurrentDay(day)}\n              today={new Date()}\n            />\n          )\n        ))}\n      </div>\n\n      {isModalOpen && selectedDay && (\n        <DayDetailModal\n          day={selectedDay} // Pass selected day\n          activities={activitiesByDay[selectedDay] || []}\n          notes={notes[selectedDay] || ''}\n          onToggleActivity={handleToggleActivity}\n          onSaveNotes={handleSaveNotes}\n          onClose={handleCloseModal}\n          onCheckAll={handleCheckAll}\n          onUncheckAll={handleUncheckAll}\n        />\n      )}\n      \n      <CalendarModal \n        isOpen={isCalendarModalOpen} \n        onClose={handleCloseCalendar}\n        completions={completions}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}