{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal';\nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date in local time\n    const today = new Date();\n\n    // Calculate Monday of the current week\n    const monday = new Date(today);\n    const day = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n    const diff = today.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    monday.setDate(diff);\n\n    // Format as YYYY-MM-DD in local time\n    const year = monday.getFullYear();\n    const month = String(monday.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(monday.getDate()).padStart(2, '0');\n    return `${year}-${month}-${dayOfMonth}`;\n  });\n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) => acts.map(act => ({\n        ...act,\n        semana: currentWeek,\n        dia: day,\n        id: `${currentWeek}-${day}-${act.actividad}`\n      })));\n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n  const handleToggleActivity = id => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act => act.id === id ? {\n        ...act,\n        completado: !act.completado\n      } : act)\n    }));\n  };\n  const navigateWeek = direction => {\n    const date = new Date(currentWeek);\n    date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n\n    // Format as YYYY-MM-DD in local time\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(date.getDate()).padStart(2, '0');\n    setCurrentWeek(`${year}-${month}-${dayOfMonth}`);\n  };\n\n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round(completedCount / totalCount * 100) : 0;\n  const getProgressBarEmoji = percentage => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n\n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n\n  // Get today's date in local time\n  const today = new Date();\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n\n  // Function to check if a day is today\n  const isCurrentDay = dayName => {\n    // Get the date for the current week's Monday\n    const weekStart = new Date(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = new Date(weekStart);\n    dayDate.setDate(weekStart.getDate() + dayIndex);\n\n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = `${dayDate.getFullYear()}-${String(dayDate.getMonth() + 1).padStart(2, '0')}-${String(dayDate.getDate()).padStart(2, '0')}`;\n    return dayFormatted === todayFormatted;\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({\n      ...prevNotes,\n      [dayKey]: newNotes\n    }));\n  };\n  const handleCheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: true\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleUncheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: false\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleDayClick = day => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Agenda de Estudio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekNavigation, {\n      onPrev: () => navigateWeek('prev'),\n      onNext: () => navigateWeek('next'),\n      currentWeek: currentWeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progressText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: days.map(day => activitiesByDay[day] && /*#__PURE__*/_jsxDEV(DayView, {\n        day: day,\n        activities: activitiesByDay[day],\n        onToggle: handleToggleActivity,\n        onDayClick: () => handleDayClick(day)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), isModalOpen && selectedDay && /*#__PURE__*/_jsxDEV(DayDetailModal, {\n      day: selectedDay // Pass selected day\n      ,\n      activities: activitiesByDay[selectedDay] || [],\n      notes: notes[selectedDay] || '',\n      onToggleActivity: handleToggleActivity,\n      onSaveNotes: handleSaveNotes,\n      onClose: handleCloseModal,\n      onCheckAll: handleCheckAll,\n      onUncheckAll: handleUncheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"71u8oBQzfbEiU6czU9oPQ4WLYmQ=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","WeekNavigation","DayView","DayDetailModal","defaultActivities","ProgressBar","jsxDEV","_jsxDEV","App","_s","currentWeek","setCurrentWeek","today","Date","monday","day","getDay","diff","getDate","setDate","year","getFullYear","month","String","getMonth","padStart","dayOfMonth","weeksData","setWeeksData","Array","isArray","console","log","newWeekActivities","Object","entries","flatMap","acts","map","act","semana","dia","id","actividad","prev","currentWeekData","handleToggleActivity","completado","navigateWeek","direction","date","completedCount","filter","a","length","totalCount","progress","Math","round","getProgressBarEmoji","percentage","progressText","activitiesByDay","reduce","acc","activity","push","days","todayDayName","todayFormatted","isCurrentDay","dayName","weekStart","dayIndex","indexOf","dayDate","dayFormatted","isModalOpen","setIsModalOpen","selectedDay","setSelectedDay","notes","setNotes","handleSaveNotes","dayKey","newNotes","prevNotes","handleCheckAll","prevWeeksData","newWeeksData","handleUncheckAll","handleDayClick","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onNext","activities","onToggle","onDayClick","onToggleActivity","onSaveNotes","onClose","onCheckAll","onUncheckAll","_c","$RefreshReg$"],"sources":["/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal'; \nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\n\nexport default function App() {\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    // Get current date in local time\n    const today = new Date();\n    \n    // Calculate Monday of the current week\n    const monday = new Date(today);\n    const day = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n    const diff = today.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    monday.setDate(diff);\n    \n    // Format as YYYY-MM-DD in local time\n    const year = monday.getFullYear();\n    const month = String(monday.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(monday.getDate()).padStart(2, '0');\n    \n    return `${year}-${month}-${dayOfMonth}`;\n  });\n  \n  const [weeksData, setWeeksData] = useLocalStorage('studyPlannerData', {});\n\n  // Initialize week if it doesn't exist OR if the data is not an array (old format)\n  useEffect(() => {\n    if (!weeksData[currentWeek] || !Array.isArray(weeksData[currentWeek])) {\n      console.log(`Initializing week: ${currentWeek}`);\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) =>\n        acts.map(act => ({ ...act, semana: currentWeek, dia: day, id: `${currentWeek}-${day}-${act.actividad}` }))\n      );\n      \n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities,\n      }));\n    }\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  // Ensure currentWeekData is always an array to prevent crashes.\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  // Debugging logs\n  console.log(\"weeksData:\", weeksData);\n  console.log(\"currentWeek:\", currentWeek);\n  console.log(\"currentWeekData:\", currentWeekData);\n\n  const handleToggleActivity = (id) => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act =>\n        act.id === id ? { ...act, completado: !act.completado } : act\n      ),\n    }));\n  };\n  \n  const navigateWeek = (direction) => {\n    const date = new Date(currentWeek);\n    date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n    \n    // Format as YYYY-MM-DD in local time\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const dayOfMonth = String(date.getDate()).padStart(2, '0');\n    \n    setCurrentWeek(`${year}-${month}-${dayOfMonth}`);\n  };\n  \n  // Calculate progress\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  const getProgressBarEmoji = (percentage) => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  \n  // Group activities by day\n  const activitiesByDay = currentWeekData.reduce((acc, activity) => {\n    if (!acc[activity.dia]) acc[activity.dia] = [];\n    acc[activity.dia].push(activity);\n    return acc;\n  }, {});\n  \n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n  \n  // Get today's date in local time\n  const today = new Date();\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; // Convert JS day to our day index\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n  \n  // Function to check if a day is today\n  const isCurrentDay = (dayName) => {\n    // Get the date for the current week's Monday\n    const weekStart = new Date(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = new Date(weekStart);\n    dayDate.setDate(weekStart.getDate() + dayIndex);\n    \n    // Format the day's date as YYYY-MM-DD\n    const dayFormatted = `${dayDate.getFullYear()}-${String(dayDate.getMonth() + 1).padStart(2, '0')}-${String(dayDate.getDate()).padStart(2, '0')}`;\n    \n    return dayFormatted === todayFormatted;\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); // State to store notes for each day\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({ ...prevNotes, [dayKey]: newNotes }));\n  };\n\n  const handleCheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: true } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleUncheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: false } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app-title\">Agenda de Estudio</h1>\n      \n      <WeekNavigation \n        onPrev={() => navigateWeek('prev')} \n        onNext={() => navigateWeek('next')} \n        currentWeek={currentWeek} \n      />\n      \n      <div className=\"progress-summary\">\n        <p>{progressText}</p>\n        <ProgressBar progress={progress} />\n      </div>\n      \n      <div className=\"week-view\">\n        {days.map(day => (\n          activitiesByDay[day] && (\n            <DayView \n              key={day} \n              day={day} \n              activities={activitiesByDay[day]} \n              onToggle={handleToggleActivity} \n              onDayClick={() => handleDayClick(day)} \n            />\n          )\n        ))}\n      </div>\n\n      {isModalOpen && selectedDay && (\n        <DayDetailModal\n          day={selectedDay} // Pass selected day\n          activities={activitiesByDay[selectedDay] || []}\n          notes={notes[selectedDay] || ''}\n          onToggleActivity={handleToggleActivity}\n          onSaveNotes={handleSaveNotes}\n          onClose={handleCloseModal}\n          onCheckAll={handleCheckAll}\n          onUncheckAll={handleUncheckAll}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}