{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal';\nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO, isBefore, startOfDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\nimport FrequencyModal from './components/FrequencyModal';\nimport SettingsModal from './components/SettingsModal';\nimport { encryptData, decryptData } from './auth/cryptoUtils';\n\n// Utilidad simple para generar UUID v4\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport default function App() {\n  _s();\n  // ID Ãºnico de dispositivo confiable\n  const [deviceId] = useState(() => {\n    let id = localStorage.getItem('trustedDeviceId');\n    if (!id) {\n      id = generateUUID();\n      localStorage.setItem('trustedDeviceId', id);\n    }\n    return id;\n  });\n  const [user, setUser] = useState(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n  // Hooks para control de login/registro\n  const [authMode, setAuthMode] = useState('login');\n  const [pendingUsername, setPendingUsername] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    const today = new Date();\n    const monday = startOfWeek(today, {\n      weekStartsOn: 1\n    });\n    return format(monday, 'yyyy-MM-dd');\n  });\n\n  // Hook para datos de usuario actual (clave depende del usuario)\n  const [weeksData, setWeeksData] = useState({});\n\n  // Autologin si el dispositivo es confiable\n  useEffect(() => {\n    if (!user) {\n      const username = localStorage.getItem('lastLoggedUsername');\n      if (username) {\n        const trustedKey = `trustedDevices_${username}`;\n        let trusted = [];\n        try {\n          trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n        } catch {}\n        if (trusted.includes(deviceId)) {\n          setUser({\n            username\n          });\n        }\n      }\n      setIsAuthLoading(false);\n    } else {\n      setIsAuthLoading(false);\n    }\n  }, [deviceId, user]);\n\n  // Cargar datos del usuario autenticado\n  useEffect(() => {\n    if (user && user.username) {\n      const key = `studyPlannerData_${user.username}`;\n      const stored = localStorage.getItem(key);\n      setWeeksData(stored ? JSON.parse(stored) : {});\n    } else {\n      setWeeksData({});\n    }\n  }, [user]);\n\n  // Guardar datos automÃ¡ticamente cuando cambian y hay usuario\n  useEffect(() => {\n    if (user && user.username) {\n      const key = `studyPlannerData_${user.username}`;\n      localStorage.setItem(key, JSON.stringify(weeksData));\n    }\n  }, [weeksData, user]);\n  const saveCredentials = async (username, password) => {\n    try {\n      const encrypted = await encryptData(JSON.stringify({\n        username\n      }), password);\n      localStorage.setItem('userCredentials', JSON.stringify(encrypted));\n      setUser({\n        username\n      });\n      setLoginError('');\n    } catch (error) {\n      setLoginError('Error al guardar credenciales');\n      console.error(error);\n    }\n  };\n  const loadCredentials = async password => {\n    try {\n      const encrypted = JSON.parse(localStorage.getItem('userCredentials'));\n      if (!encrypted) return null;\n      const data = await decryptData(encrypted, password);\n      return JSON.parse(data);\n    } catch (error) {\n      setLoginError('Credenciales invÃ¡lidas');\n      return null;\n    }\n  };\n  const handleLogin = async (username, mode = 'login') => {\n    // Obtiene la lista de usuarios\n    let userList = [];\n    try {\n      userList = JSON.parse(localStorage.getItem('userList')) || [];\n    } catch {}\n    if (mode === 'login') {\n      if (!userList.includes(username)) {\n        setLoginError('Ese usuario no existe. Â¿Quieres crear una cuenta?');\n        setAuthMode('register');\n        setPendingUsername(username);\n        return;\n      }\n    }\n\n    // Login directo por username\n    if (mode === 'login') {\n      setUser({\n        username\n      });\n      setLoginError('');\n      localStorage.setItem('lastLoggedUsername', username);\n      localStorage.setItem('hasHadUser', 'true');\n      // Agregar este dispositivo a la lista de confianza\n      const trustedKey = `trustedDevices_${username}`;\n      let trusted = [];\n      try {\n        trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n      } catch {}\n      if (!trusted.includes(deviceId)) {\n        trusted.push(deviceId);\n        localStorage.setItem(trustedKey, JSON.stringify(trusted));\n      }\n    } else {\n      // Crear usuario nuevo\n      localStorage.setItem('lastLoggedUsername', username);\n      localStorage.setItem('hasHadUser', 'true');\n      if (!userList.includes(username)) {\n        userList.push(username);\n        localStorage.setItem('userList', JSON.stringify(userList));\n      }\n      const trustedKey = `trustedDevices_${username}`;\n      localStorage.setItem(trustedKey, JSON.stringify([deviceId]));\n      setUser({\n        username\n      });\n      setLoginError('');\n    }\n  };\n  const handleLogout = () => {\n    if (user && user.username) {\n      // Eliminar este dispositivo de la lista de confianza\n      const trustedKey = `trustedDevices_${user.username}`;\n      let trusted = [];\n      try {\n        trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n      } catch {}\n      trusted = trusted.filter(id => id !== deviceId);\n      localStorage.setItem(trustedKey, JSON.stringify(trusted));\n    }\n    localStorage.removeItem('userCredentials');\n    localStorage.removeItem('lastLoggedUsername');\n    setUser(null);\n  };\n  useEffect(() => {\n    const initializeWeek = () => {\n      // Inicializar solo si la semana no existe o estÃ¡ vacÃ­a\n      if (weeksData[currentWeek] && weeksData[currentWeek].length > 0) return;\n      console.log(`Inicializando semana: ${currentWeek}`);\n\n      // Verificar si ya hay actividades para esta semana en localStorage\n      const storedWeekData = localStorage.getItem(`week_${currentWeek}`);\n      if (storedWeekData) {\n        // Si hay datos guardados, usarlos\n        try {\n          const parsedData = JSON.parse(storedWeekData);\n          setWeeksData(prev => ({\n            ...prev,\n            [currentWeek]: parsedData\n          }));\n          return;\n        } catch (e) {\n          console.error('Error al cargar datos de la semana:', e);\n        }\n      }\n\n      // Si no hay datos guardados, crear actividades por defecto\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) => acts.map(act => ({\n        ...act,\n        semana: currentWeek,\n        dia: day,\n        id: `${currentWeek}-${day}-${act.actividad}`.toLowerCase().replace(/\\s+/g, '-'),\n        completado: false\n      })));\n\n      // Guardar en localStorage para futuras cargas\n      localStorage.setItem(`week_${currentWeek}`, JSON.stringify(newWeekActivities));\n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    };\n    initializeWeek();\n  }, [currentWeek, weeksData, setWeeksData]);\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n  const allActivities = Object.values(weeksData).flat();\n  const handleToggleActivity = id => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act => act.id === id ? {\n        ...act,\n        completado: !act.completado\n      } : act)\n    }));\n  };\n  const navigateWeek = direction => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round(completedCount / totalCount * 100) : 0;\n  const getProgressBarEmoji = percentage => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n\n  // Create a map to track unique activities by ID\n  const uniqueActivitiesMap = new Map();\n\n  // Filter out duplicates by using the activity ID\n  const uniqueActivities = (currentWeekData || []).filter(activity => {\n    if (!activity || !activity.id || !activity.dia) return false;\n\n    // If we've already seen this activity, skip it\n    if (uniqueActivitiesMap.has(activity.id)) {\n      return false;\n    }\n\n    // Otherwise, add it to our map and include it\n    uniqueActivitiesMap.set(activity.id, true);\n    return true;\n  });\n\n  // Group activities by day\n  const activitiesByDay = uniqueActivities.reduce((acc, activity) => {\n    const day = activity.dia;\n    if (!acc[day]) acc[day] = [];\n    acc[day].push(activity);\n    return acc;\n  }, {});\n\n  // Ensure all days exist in the object, even if empty\n  days.forEach(day => {\n    if (!activitiesByDay[day]) {\n      activitiesByDay[day] = [];\n    }\n  });\n  const getDayNumber = dayName => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n  const today = startOfDay(new Date());\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1];\n  const isCurrentDay = dayName => {\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    return dayFormatted === todayFormatted;\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({});\n  const [completions, setCompletions] = useState({});\n  const [showFrequencyModal, setShowFrequencyModal] = useState(false);\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [customActivities, setCustomActivities] = useState({});\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({\n      ...prevNotes,\n      [dayKey]: newNotes\n    }));\n  };\n  const handleCheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: true\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleUncheckAll = dayKey => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity => activity.dia === dayKey ? {\n        ...activity,\n        completado: false\n      } : activity);\n      return newWeeksData;\n    });\n  };\n  const handleDayClick = day => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n  const handleOpenFrequency = () => {\n    setShowFrequencyModal(true);\n  };\n  const handleOpenSettings = () => {\n    setShowSettingsModal(true);\n  };\n  const handleAddActivity = (newActivity, day) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = {\n        ...prevWeeksData\n      };\n      const weekKey = currentWeek; // Use the current week from state\n\n      // Initialize the week if it doesn't exist\n      if (!newWeeksData[weekKey]) {\n        newWeeksData[weekKey] = [];\n      }\n\n      // Add the new activity with the correct structure\n      const activityToAdd = {\n        ...newActivity,\n        semana: weekKey,\n        dia: day,\n        id: `${weekKey}-${day}-${newActivity.actividad}-${Date.now()}`\n      };\n\n      // Check if activity with same ID already exists\n      const existingIndex = newWeeksData[weekKey].findIndex(act => act.id === activityToAdd.id);\n      if (existingIndex >= 0) {\n        // Update existing activity\n        newWeeksData[weekKey][existingIndex] = activityToAdd;\n      } else {\n        // Add new activity\n        newWeeksData[weekKey] = [...(newWeeksData[weekKey] || []), activityToAdd];\n      }\n\n      // Save to localStorage\n      localStorage.setItem('weeksData', JSON.stringify(newWeeksData));\n      return newWeeksData;\n    });\n  };\n  const handleCloseSettings = () => {\n    setShowSettingsModal(false);\n  };\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = {\n        ...prev\n      };\n      if (!newCompletions[dateStr]) {\n        newCompletions[dateStr] = {\n          completed: 0,\n          total: 0\n        };\n      }\n      // Update the count based on completion status\n      const activityDate = format(date, 'yyyy-MM-dd');\n      if (!newCompletions[activityDate]) {\n        newCompletions[activityDate] = {\n          completed: 0,\n          total: 0\n        };\n      }\n      if (completed) {\n        newCompletions[activityDate].completed += 1;\n      } else {\n        newCompletions[activityDate].completed = Math.max(0, newCompletions[activityDate].completed - 1);\n      }\n      return newCompletions;\n    });\n  };\n  useEffect(() => {\n    const newCompletions = {};\n\n    // First, count all activities by date\n    Object.keys(weeksData).forEach(weekKey => {\n      const weekActivities = weeksData[weekKey];\n\n      // Skip if weekActivities is not an array or is empty\n      if (!Array.isArray(weekActivities) || weekActivities.length === 0) {\n        return;\n      }\n      weekActivities.forEach(activity => {\n        // Skip if activity is not an object or doesn't have required properties\n        if (!activity || typeof activity !== 'object' || !('dia' in activity) || !('completado' in activity)) {\n          console.warn('Invalid activity data:', activity);\n          return;\n        }\n        const weekStart = parseISO(weekKey);\n        const dayIndex = days.indexOf(activity.dia);\n        if (dayIndex === -1) return;\n        try {\n          // Sumar 1 al dayIndex para corregir el desplazamiento de fechas\n          const activityDate = startOfDay(addDays(weekStart, dayIndex + 1));\n          const dateStr = format(activityDate, 'yyyy-MM-dd');\n          if (!newCompletions[dateStr]) {\n            newCompletions[dateStr] = {\n              completed: 0,\n              total: 0\n            };\n          }\n\n          // Count all activities for the day\n          newCompletions[dateStr].total += 1;\n\n          // Count completed activities\n          if (activity.completado) {\n            newCompletions[dateStr].completed += 1;\n          }\n        } catch (error) {\n          console.error('Error processing activity:', error, 'Activity:', activity);\n        }\n      });\n    });\n    setCompletions(prev => {\n      // Merge with existing completions to preserve any updates not in weeksData\n      const merged = {\n        ...newCompletions\n      };\n      Object.entries(prev).forEach(([date, data]) => {\n        if (!merged[date]) {\n          merged[date] = {\n            ...data\n          };\n        }\n      });\n      return merged;\n    });\n  }, [weeksData, days]);\n  if (isAuthLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-title\",\n          children: \"Accediendo...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    const hasHadUser = Boolean(localStorage.getItem('hasHadUser'));\n\n    // Login/registro controlado\n    const handleForm = async e => {\n      e.preventDefault();\n      const formData = new FormData(e.target);\n      const username = formData.get('username');\n      setPendingUsername(username);\n      if (authMode === 'login') {\n        await handleLogin(username, 'login');\n      } else {\n        await handleLogin(username, 'register');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"logo-circle\",\n            children: \"\\uD83D\\uDFE6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-title\",\n          children: authMode === 'login' ? 'Welcome Back' : 'Crea tu cuenta'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-sub\",\n          children: authMode === 'login' ? 'Ingresa tu usuario y contraseÃ±a para acceder' : 'Elige tu usuario y contraseÃ±a para crear tu cuenta'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-error\",\n          children: loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form\",\n          onSubmit: handleForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"Nombre de usuario\",\n              autoComplete: \"username\",\n              required: true,\n              defaultValue: pendingUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn\",\n            type: \"submit\",\n            children: authMode === 'login' ? 'Login' : 'Crear cuenta'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), authMode === 'register' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-link\",\n            style: {\n              background: 'none',\n              border: 'none',\n              color: '#69f',\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              setAuthMode('login');\n              setLoginError('');\n            },\n            children: \"Volver a inicio de sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Bienvenido, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Agenda de Estudio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeekNavigation, {\n      onPrev: () => navigateWeek('prev'),\n      onNext: () => navigateWeek('next'),\n      currentWeek: currentWeek,\n      onOpenCalendar: handleOpenCalendar,\n      onOpenFrequency: handleOpenFrequency,\n      onOpenSettings: handleOpenSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progressText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: days.map((day, index) => {\n        const dayDate = addDays(parseISO(currentWeek), index);\n        const isPast = isBefore(startOfDay(dayDate), today);\n        return activitiesByDay[day] && /*#__PURE__*/_jsxDEV(DayView, {\n          day: day,\n          dayNumber: getDayNumber(day),\n          activities: activitiesByDay[day],\n          onToggle: handleToggleActivity,\n          onDayClick: () => handleDayClick(day),\n          isToday: isCurrentDay(day),\n          isPast: isPast\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), isModalOpen && selectedDay && /*#__PURE__*/_jsxDEV(DayDetailModal, {\n      day: selectedDay,\n      activities: activitiesByDay[selectedDay] || [],\n      notes: notes[selectedDay] || '',\n      onToggleActivity: handleToggleActivity,\n      onSaveNotes: handleSaveNotes,\n      onClose: handleCloseModal,\n      onCheckAll: handleCheckAll,\n      onUncheckAll: handleUncheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {\n      isOpen: isCalendarModalOpen,\n      onClose: handleCloseCalendar,\n      completions: completions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), showFrequencyModal && /*#__PURE__*/_jsxDEV(FrequencyModal, {\n      isOpen: showFrequencyModal,\n      onClose: () => setShowFrequencyModal(false),\n      activities: allActivities,\n      currentWeek: currentWeek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n      isOpen: showSettingsModal,\n      onClose: handleCloseSettings,\n      onLogout: handleLogout,\n      onAddActivity: handleAddActivity,\n      currentWeekActivities: currentWeekData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 552,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h6zh1rtXbNdcBtf+95oIjB09w8U=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useLocalStorage","WeekNavigation","DayView","DayDetailModal","defaultActivities","ProgressBar","format","startOfWeek","addDays","parseISO","isBefore","startOfDay","es","CalendarModal","FrequencyModal","SettingsModal","encryptData","decryptData","jsxDEV","_jsxDEV","generateUUID","replace","c","r","Math","random","v","toString","App","_s","deviceId","id","localStorage","getItem","setItem","user","setUser","isAuthLoading","setIsAuthLoading","authMode","setAuthMode","pendingUsername","setPendingUsername","loginError","setLoginError","currentWeek","setCurrentWeek","today","Date","monday","weekStartsOn","weeksData","setWeeksData","username","trustedKey","trusted","JSON","parse","includes","key","stored","stringify","saveCredentials","password","encrypted","error","console","loadCredentials","data","handleLogin","mode","userList","push","handleLogout","filter","removeItem","initializeWeek","length","log","storedWeekData","parsedData","prev","e","newWeekActivities","Object","entries","flatMap","day","acts","map","act","semana","dia","actividad","toLowerCase","completado","currentWeekData","Array","isArray","allActivities","values","flat","handleToggleActivity","navigateWeek","direction","currentMonday","newMonday","completedCount","a","totalCount","progress","round","getProgressBarEmoji","percentage","progressText","days","uniqueActivitiesMap","Map","uniqueActivities","activity","has","set","activitiesByDay","reduce","acc","forEach","getDayNumber","dayName","dayIndex","indexOf","weekStart","dayDate","todayFormatted","todayDayName","getDay","isCurrentDay","dayFormatted","isModalOpen","setIsModalOpen","selectedDay","setSelectedDay","notes","setNotes","completions","setCompletions","showFrequencyModal","setShowFrequencyModal","isCalendarModalOpen","setIsCalendarModalOpen","showSettingsModal","setShowSettingsModal","customActivities","setCustomActivities","handleSaveNotes","dayKey","newNotes","prevNotes","handleCheckAll","prevWeeksData","newWeeksData","handleUncheckAll","handleDayClick","handleCloseModal","handleOpenCalendar","handleCloseCalendar","handleOpenFrequency","handleOpenSettings","handleAddActivity","newActivity","weekKey","activityToAdd","now","existingIndex","findIndex","handleCloseSettings","updateCompletions","date","activityId","completed","dateStr","toISOString","split","newCompletions","total","activityDate","max","keys","weekActivities","warn","merged","className","children","fileName","_jsxFileName","lineNumber","columnNumber","hasHadUser","Boolean","handleForm","preventDefault","formData","FormData","target","get","onSubmit","type","name","placeholder","autoComplete","required","defaultValue","style","textAlign","marginTop","background","border","color","cursor","onClick","onPrev","onNext","onOpenCalendar","onOpenFrequency","onOpenSettings","index","isPast","dayNumber","activities","onToggle","onDayClick","isToday","onToggleActivity","onSaveNotes","onClose","onCheckAll","onUncheckAll","isOpen","onLogout","onAddActivity","currentWeekActivities","_c","$RefreshReg$"],"sources":["/Users/cesarvargastapia/CascadeProjects/study-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport WeekNavigation from './components/WeekNavigation';\nimport DayView from './components/DayView';\nimport DayDetailModal from './components/DayDetailModal'; \nimport { defaultActivities } from './data/defaultActivities';\nimport ProgressBar from './components/ProgressBar';\nimport { format, startOfWeek, addDays, parseISO, isBefore, startOfDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport CalendarModal from './components/CalendarModal';\nimport FrequencyModal from './components/FrequencyModal';\nimport SettingsModal from './components/SettingsModal';\nimport { encryptData, decryptData } from './auth/cryptoUtils';\n\n// Utilidad simple para generar UUID v4\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport default function App() {\n  // ID Ãºnico de dispositivo confiable\n  const [deviceId] = useState(() => {\n    let id = localStorage.getItem('trustedDeviceId');\n    if (!id) {\n      id = generateUUID();\n      localStorage.setItem('trustedDeviceId', id);\n    }\n    return id;\n  });\n\n  const [user, setUser] = useState(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n  // Hooks para control de login/registro\n  const [authMode, setAuthMode] = useState('login');\n  const [pendingUsername, setPendingUsername] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    const today = new Date();\n    const monday = startOfWeek(today, { weekStartsOn: 1 });\n    return format(monday, 'yyyy-MM-dd');\n  });\n  \n  // Hook para datos de usuario actual (clave depende del usuario)\n  const [weeksData, setWeeksData] = useState({});\n\n  // Autologin si el dispositivo es confiable\n  useEffect(() => {\n    if (!user) {\n      const username = localStorage.getItem('lastLoggedUsername');\n      if (username) {\n        const trustedKey = `trustedDevices_${username}`;\n        let trusted = [];\n        try {\n          trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n        } catch {}\n        if (trusted.includes(deviceId)) {\n          setUser({ username });\n        }\n      }\n      setIsAuthLoading(false);\n    } else {\n      setIsAuthLoading(false);\n    }\n  }, [deviceId, user]);\n\n  // Cargar datos del usuario autenticado\n  useEffect(() => {\n    if (user && user.username) {\n      const key = `studyPlannerData_${user.username}`;\n      const stored = localStorage.getItem(key);\n      setWeeksData(stored ? JSON.parse(stored) : {});\n    } else {\n      setWeeksData({});\n    }\n  }, [user]);\n\n  // Guardar datos automÃ¡ticamente cuando cambian y hay usuario\n  useEffect(() => {\n    if (user && user.username) {\n      const key = `studyPlannerData_${user.username}`;\n      localStorage.setItem(key, JSON.stringify(weeksData));\n    }\n  }, [weeksData, user]);\n\n  const saveCredentials = async (username, password) => {\n    try {\n      const encrypted = await encryptData(JSON.stringify({ username }), password);\n      localStorage.setItem('userCredentials', JSON.stringify(encrypted));\n      setUser({ username });\n      setLoginError('');\n    } catch (error) {\n      setLoginError('Error al guardar credenciales');\n      console.error(error);\n    }\n  };\n\n  const loadCredentials = async (password) => {\n    try {\n      const encrypted = JSON.parse(localStorage.getItem('userCredentials'));\n      if (!encrypted) return null;\n      \n      const data = await decryptData(encrypted, password);\n      return JSON.parse(data);\n    } catch (error) {\n      setLoginError('Credenciales invÃ¡lidas');\n      return null;\n    }\n  };\n\n  const handleLogin = async (username, mode = 'login') => {\n    // Obtiene la lista de usuarios\n    let userList = [];\n    try {\n      userList = JSON.parse(localStorage.getItem('userList')) || [];\n    } catch {}\n\n    if (mode === 'login') {\n      if (!userList.includes(username)) {\n        setLoginError('Ese usuario no existe. Â¿Quieres crear una cuenta?');\n        setAuthMode('register');\n        setPendingUsername(username);\n        return;\n      }\n    }\n\n    // Login directo por username\n    if (mode === 'login') {\n      setUser({ username });\n      setLoginError('');\n      localStorage.setItem('lastLoggedUsername', username);\n      localStorage.setItem('hasHadUser', 'true');\n      // Agregar este dispositivo a la lista de confianza\n      const trustedKey = `trustedDevices_${username}`;\n      let trusted = [];\n      try {\n        trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n      } catch {}\n      if (!trusted.includes(deviceId)) {\n        trusted.push(deviceId);\n        localStorage.setItem(trustedKey, JSON.stringify(trusted));\n      }\n    } else {\n      // Crear usuario nuevo\n      localStorage.setItem('lastLoggedUsername', username);\n      localStorage.setItem('hasHadUser', 'true');\n      if (!userList.includes(username)) {\n        userList.push(username);\n        localStorage.setItem('userList', JSON.stringify(userList));\n      }\n      const trustedKey = `trustedDevices_${username}`;\n      localStorage.setItem(trustedKey, JSON.stringify([deviceId]));\n      setUser({ username });\n      setLoginError('');\n    }\n  }; \n\n  const handleLogout = () => {\n    if (user && user.username) {\n      // Eliminar este dispositivo de la lista de confianza\n      const trustedKey = `trustedDevices_${user.username}`;\n      let trusted = [];\n      try {\n        trusted = JSON.parse(localStorage.getItem(trustedKey)) || [];\n      } catch {}\n      trusted = trusted.filter(id => id !== deviceId);\n      localStorage.setItem(trustedKey, JSON.stringify(trusted));\n    }\n    localStorage.removeItem('userCredentials');\n    localStorage.removeItem('lastLoggedUsername');\n    setUser(null);\n  };\n\n\n  useEffect(() => {\n    const initializeWeek = () => {\n      // Inicializar solo si la semana no existe o estÃ¡ vacÃ­a\n      if (weeksData[currentWeek] && weeksData[currentWeek].length > 0) return;\n      \n      console.log(`Inicializando semana: ${currentWeek}`);\n      \n      // Verificar si ya hay actividades para esta semana en localStorage\n      const storedWeekData = localStorage.getItem(`week_${currentWeek}`);\n      \n      if (storedWeekData) {\n        // Si hay datos guardados, usarlos\n        try {\n          const parsedData = JSON.parse(storedWeekData);\n          setWeeksData(prev => ({\n            ...prev,\n            [currentWeek]: parsedData\n          }));\n          return;\n        } catch (e) {\n          console.error('Error al cargar datos de la semana:', e);\n        }\n      }\n      \n      // Si no hay datos guardados, crear actividades por defecto\n      const newWeekActivities = Object.entries(defaultActivities).flatMap(([day, acts]) =>\n        acts.map(act => ({\n          ...act,\n          semana: currentWeek,\n          dia: day,\n          id: `${currentWeek}-${day}-${act.actividad}`.toLowerCase().replace(/\\s+/g, '-'),\n          completado: false\n        }))\n      );\n      \n      // Guardar en localStorage para futuras cargas\n      localStorage.setItem(`week_${currentWeek}`, JSON.stringify(newWeekActivities));\n      \n      setWeeksData(prev => ({\n        ...prev,\n        [currentWeek]: newWeekActivities\n      }));\n    };\n\n    initializeWeek();\n  }, [currentWeek, weeksData, setWeeksData]);\n\n  const currentWeekData = Array.isArray(weeksData[currentWeek]) ? weeksData[currentWeek] : [];\n\n  const allActivities = Object.values(weeksData).flat();\n\n  const handleToggleActivity = (id) => {\n    setWeeksData(prev => ({\n      ...prev,\n      [currentWeek]: prev[currentWeek].map(act =>\n        act.id === id ? { ...act, completado: !act.completado } : act\n      ),\n    }));\n  };\n  \n  const navigateWeek = (direction) => {\n    const currentMonday = parseISO(currentWeek);\n    const newMonday = addDays(currentMonday, direction === 'next' ? 7 : -7);\n    setCurrentWeek(format(newMonday, 'yyyy-MM-dd'));\n  };\n  \n  const completedCount = currentWeekData.filter(a => a.completado).length;\n  const totalCount = currentWeekData.length;\n  const progress = totalCount > 0 ? Math.round((completedCount / totalCount) * 100) : 0;\n\n  const getProgressBarEmoji = (percentage) => {\n    if (percentage === 100) return 'ðŸŽ‰';\n    if (percentage >= 75) return 'ðŸ’ª';\n    if (percentage >= 50) return 'ðŸš€';\n    if (percentage >= 25) return 'âœ¨';\n    return 'ðŸ“š';\n  };\n\n  const progressText = `Progreso: ${completedCount}/${totalCount} actividades ${getProgressBarEmoji(progress)}`;\n  \n  const days = ['Lunes', 'Martes', 'MiÃ©rcoles', 'Jueves', 'Viernes', 'SÃ¡bado', 'Domingo'];\n  \n  // Create a map to track unique activities by ID\n  const uniqueActivitiesMap = new Map();\n  \n  // Filter out duplicates by using the activity ID\n  const uniqueActivities = (currentWeekData || []).filter(activity => {\n    if (!activity || !activity.id || !activity.dia) return false;\n    \n    // If we've already seen this activity, skip it\n    if (uniqueActivitiesMap.has(activity.id)) {\n      return false;\n    }\n    \n    // Otherwise, add it to our map and include it\n    uniqueActivitiesMap.set(activity.id, true);\n    return true;\n  });\n  \n  // Group activities by day\n  const activitiesByDay = uniqueActivities.reduce((acc, activity) => {\n    const day = activity.dia;\n    if (!acc[day]) acc[day] = [];\n    acc[day].push(activity);\n    return acc;\n  }, {});\n  \n  // Ensure all days exist in the object, even if empty\n  days.forEach(day => {\n    if (!activitiesByDay[day]) {\n      activitiesByDay[day] = [];\n    }\n  });\n  \n  const getDayNumber = (dayName) => {\n    const dayIndex = days.indexOf(dayName);\n    if (dayIndex === -1) return '';\n    \n    const weekStart = parseISO(currentWeek);\n    const dayDate = addDays(weekStart, dayIndex);\n    return format(dayDate, 'd');\n  };\n  \n  const today = startOfDay(new Date());\n  const todayFormatted = format(today, 'yyyy-MM-dd');\n  const todayDayName = days[today.getDay() === 0 ? 6 : today.getDay() - 1]; \n  \n  const isCurrentDay = (dayName) => {\n    const weekStart = parseISO(currentWeek);\n    const dayIndex = days.indexOf(dayName);\n    const dayDate = addDays(weekStart, dayIndex);\n    \n    const dayFormatted = format(dayDate, 'yyyy-MM-dd');\n    \n    return dayFormatted === todayFormatted;\n  };\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [notes, setNotes] = useState({}); \n  const [completions, setCompletions] = useState({});\n  const [showFrequencyModal, setShowFrequencyModal] = useState(false);\n  const [isCalendarModalOpen, setIsCalendarModalOpen] = useState(false);\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\n  const [customActivities, setCustomActivities] = useState({});\n\n  const handleSaveNotes = (dayKey, newNotes) => {\n    setNotes(prevNotes => ({ ...prevNotes, [dayKey]: newNotes }));\n  };\n\n  const handleCheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: true } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleUncheckAll = (dayKey) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      newWeeksData[currentWeek] = newWeeksData[currentWeek].map(activity =>\n        activity.dia === dayKey ? { ...activity, completado: false } : activity\n      );\n      return newWeeksData;\n    });\n  };\n\n  const handleDayClick = (day) => {\n    setSelectedDay(day);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDay(null);\n  };\n\n  const handleOpenCalendar = () => {\n    setIsCalendarModalOpen(true);\n  };\n\n  const handleCloseCalendar = () => {\n    setIsCalendarModalOpen(false);\n  };\n\n  const handleOpenFrequency = () => {\n    setShowFrequencyModal(true);\n  };\n\n  const handleOpenSettings = () => {\n    setShowSettingsModal(true);\n  };\n\n  const handleAddActivity = (newActivity, day) => {\n    setWeeksData(prevWeeksData => {\n      const newWeeksData = { ...prevWeeksData };\n      const weekKey = currentWeek; // Use the current week from state\n      \n      // Initialize the week if it doesn't exist\n      if (!newWeeksData[weekKey]) {\n        newWeeksData[weekKey] = [];\n      }\n      \n      // Add the new activity with the correct structure\n      const activityToAdd = {\n        ...newActivity,\n        semana: weekKey,\n        dia: day,\n        id: `${weekKey}-${day}-${newActivity.actividad}-${Date.now()}`\n      };\n      \n      // Check if activity with same ID already exists\n      const existingIndex = newWeeksData[weekKey].findIndex(\n        act => act.id === activityToAdd.id\n      );\n      \n      if (existingIndex >= 0) {\n        // Update existing activity\n        newWeeksData[weekKey][existingIndex] = activityToAdd;\n      } else {\n        // Add new activity\n        newWeeksData[weekKey] = [\n          ...(newWeeksData[weekKey] || []),\n          activityToAdd\n        ];\n      }\n      \n      // Save to localStorage\n      localStorage.setItem('weeksData', JSON.stringify(newWeeksData));\n      \n      return newWeeksData;\n    });\n  };\n\n  const handleCloseSettings = () => {\n    setShowSettingsModal(false);\n  };\n\n  const updateCompletions = (date, activityId, completed) => {\n    setCompletions(prev => {\n      const dateStr = date.toISOString().split('T')[0];\n      const newCompletions = { ...prev };\n      if (!newCompletions[dateStr]) {\n        newCompletions[dateStr] = { completed: 0, total: 0 };\n      }\n      // Update the count based on completion status\n      const activityDate = format(date, 'yyyy-MM-dd');\n      if (!newCompletions[activityDate]) {\n        newCompletions[activityDate] = { completed: 0, total: 0 };\n      }\n      if (completed) {\n        newCompletions[activityDate].completed += 1;\n      } else {\n        newCompletions[activityDate].completed = Math.max(0, newCompletions[activityDate].completed - 1);\n      }\n      return newCompletions;\n    });\n  };\n\n  useEffect(() => {\n    const newCompletions = {};\n    \n    // First, count all activities by date\n    Object.keys(weeksData).forEach(weekKey => {\n      const weekActivities = weeksData[weekKey];\n      \n      // Skip if weekActivities is not an array or is empty\n      if (!Array.isArray(weekActivities) || weekActivities.length === 0) {\n        return;\n      }\n      \n      weekActivities.forEach(activity => {\n        // Skip if activity is not an object or doesn't have required properties\n        if (!activity || typeof activity !== 'object' || !('dia' in activity) || !('completado' in activity)) {\n          console.warn('Invalid activity data:', activity);\n          return;\n        }\n        \n        const weekStart = parseISO(weekKey);\n        const dayIndex = days.indexOf(activity.dia);\n        if (dayIndex === -1) return;\n        \n        try {\n          // Sumar 1 al dayIndex para corregir el desplazamiento de fechas\n          const activityDate = startOfDay(addDays(weekStart, dayIndex + 1));\n          const dateStr = format(activityDate, 'yyyy-MM-dd');\n          \n          if (!newCompletions[dateStr]) {\n            newCompletions[dateStr] = { completed: 0, total: 0 };\n          }\n          \n          // Count all activities for the day\n          newCompletions[dateStr].total += 1;\n          \n          // Count completed activities\n          if (activity.completado) {\n            newCompletions[dateStr].completed += 1;\n          }\n        } catch (error) {\n          console.error('Error processing activity:', error, 'Activity:', activity);\n        }\n      });\n    });\n    \n    setCompletions(prev => {\n      // Merge with existing completions to preserve any updates not in weeksData\n      const merged = { ...newCompletions };\n      Object.entries(prev).forEach(([date, data]) => {\n        if (!merged[date]) {\n          merged[date] = { ...data };\n        }\n      });\n      return merged;\n    });\n  }, [weeksData, days]);\n\n  if (isAuthLoading) {\n    return (\n      <div className=\"login-bg\">\n        <div className=\"login-card\">\n          <h2 className=\"login-title\">Accediendo...</h2>\n        </div>\n      </div>\n    );\n  }\n  if (!user) {\n    const hasHadUser = Boolean(localStorage.getItem('hasHadUser'));\n\n    // Login/registro controlado\n    const handleForm = async (e) => {\n      e.preventDefault();\n      const formData = new FormData(e.target);\n      const username = formData.get('username');\n      setPendingUsername(username);\n      if (authMode === 'login') {\n        await handleLogin(username, 'login');\n      } else {\n        await handleLogin(username, 'register');\n      }\n    };\n\n    return (\n      <div className=\"login-bg\">\n        <div className=\"login-card\">\n          <div className=\"login-logo\">\n            <span className=\"logo-circle\">ðŸŸ¦</span>\n          </div>\n          <h2 className=\"login-title\">{authMode === 'login' ? 'Welcome Back' : 'Crea tu cuenta'}</h2>\n          <p className=\"login-sub\">\n            {authMode === 'login'\n              ? 'Ingresa tu usuario y contraseÃ±a para acceder'\n              : 'Elige tu usuario y contraseÃ±a para crear tu cuenta'}\n          </p>\n          {loginError && <p className=\"login-error\">{loginError}</p>}\n          <form className=\"login-form\" onSubmit={handleForm}>\n            <div className=\"login-field\">\n              <input type=\"text\" name=\"username\" placeholder=\"Nombre de usuario\" autoComplete=\"username\" required defaultValue={pendingUsername} />\n            </div>\n            <button className=\"login-btn\" type=\"submit\">{authMode === 'login' ? 'Login' : 'Crear cuenta'}</button>\n          </form>\n          {authMode === 'register' && (\n            <div style={{textAlign:'center',marginTop:10}}>\n              <button className=\"login-link\" style={{background:'none',border:'none',color:'#69f',cursor:'pointer'}} onClick={()=>{setAuthMode('login');setLoginError('');}}>Volver a inicio de sesiÃ³n</button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"user-bar\">\n        <span>Bienvenido, {user.username}</span>\n        <button onClick={handleLogout}>Salir</button>\n      </div>\n      \n      <h1 className=\"app-title\">Agenda de Estudio</h1>\n      \n      <WeekNavigation \n        onPrev={() => navigateWeek('prev')} \n        onNext={() => navigateWeek('next')} \n        currentWeek={currentWeek} \n        onOpenCalendar={handleOpenCalendar}\n        onOpenFrequency={handleOpenFrequency}\n        onOpenSettings={handleOpenSettings}\n      />\n      \n      <div className=\"progress-summary\">\n        <p>{progressText}</p>\n        <ProgressBar progress={progress} />\n      </div>\n      \n      <div className=\"week-view\">\n        {days.map((day, index) => {\n          const dayDate = addDays(parseISO(currentWeek), index);\n          const isPast = isBefore(startOfDay(dayDate), today);\n          return (\n            activitiesByDay[day] && (\n              <DayView \n                key={day} \n                day={day} \n                dayNumber={getDayNumber(day)}\n                activities={activitiesByDay[day]} \n                onToggle={handleToggleActivity} \n                onDayClick={() => handleDayClick(day)}\n                isToday={isCurrentDay(day)}\n                isPast={isPast}\n              />\n            )\n          );\n        })}\n      </div>\n\n      {isModalOpen && selectedDay && (\n        <DayDetailModal\n          day={selectedDay} \n          activities={activitiesByDay[selectedDay] || []}\n          notes={notes[selectedDay] || ''}\n          onToggleActivity={handleToggleActivity}\n          onSaveNotes={handleSaveNotes}\n          onClose={handleCloseModal}\n          onCheckAll={handleCheckAll}\n          onUncheckAll={handleUncheckAll}\n        />\n      )}\n      \n      <CalendarModal \n        isOpen={isCalendarModalOpen} \n        onClose={handleCloseCalendar}\n        completions={completions}\n      />\n      \n      {showFrequencyModal && (\n        <FrequencyModal\n          isOpen={showFrequencyModal}\n          onClose={() => setShowFrequencyModal(false)}\n          activities={allActivities}\n          currentWeek={currentWeek}\n        />\n      )}\n      \n      <SettingsModal \n        isOpen={showSettingsModal} \n        onClose={handleCloseSettings} \n        onLogout={handleLogout}\n        onAddActivity={handleAddActivity}\n        currentWeekActivities={currentWeekData}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}